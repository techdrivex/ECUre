version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ecure-db
    environment:
      POSTGRES_DB: ecure
      POSTGRES_USER: ecure
      POSTGRES_PASSWORD: ecure
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ecure-network
    restart: unless-stopped

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: ecure-redis
    ports:
      - "6379:6379"
    networks:
      - ecure-network
    restart: unless-stopped

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecure-backend
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_NAME=ecure
      - DB_USER=ecure
      - DB_PASSWORD=ecure
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    volumes:
      - ./backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - ecure-network
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              gunicorn ecure.wsgi:application --bind 0.0.0.0:8000 --workers 4"

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecure-celery
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_NAME=ecure
      - DB_USER=ecure
      - DB_PASSWORD=ecure
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./backend:/app
      - media_files:/app/media
    depends_on:
      - db
      - redis
      - backend
    networks:
      - ecure-network
    restart: unless-stopped
    command: celery -A ecure worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecure-celery-beat
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_NAME=ecure
      - DB_USER=ecure
      - DB_PASSWORD=ecure
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./backend:/app
      - media_files:/app/media
    depends_on:
      - db
      - redis
      - backend
    networks:
      - ecure-network
    restart: unless-stopped
    command: celery -A ecure beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ecure-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - ecure-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ecure-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_files:/var/www/static
      - media_files:/var/www/media
    depends_on:
      - backend
      - frontend
    networks:
      - ecure-network
    restart: unless-stopped

volumes:
  postgres_data:
  media_files:
  static_files:

networks:
  ecure-network:
    driver: bridge
